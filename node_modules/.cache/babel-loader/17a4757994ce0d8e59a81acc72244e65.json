{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\react_projs\\\\reactrouter\\\\petshop\\\\src\\\\paginas\\\\Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { busca } from '../api/api';\nimport '../assets/css/post.css';\nimport { useParams, useHistory } from 'react-router-dom'; //4.1 vamos criar o componente Post, c/ arrow function e return para renderizar na tela \n//colocaremos o export default pq vamos usar esse compon em outros lugares\n//o estado inicial(qd clica) eh vazio, vamos usar useState,que na igualdade é um obj vazio \n//vamos usar tb o useEffect pq vamos usar a req da API novamente, faremos um get na API e pegar o id do post especif\n//dentro do busca vai mandar ele pro /post/id e o setPost atualiza o estado, '[id]'eh p/ atualizar o componente toda vez que alterar o id\n//**VOU USAR UM HOOK do react-router-dom, chamado USEPARAMS\n//**ele vai fazer ligacao entre o parametro 'id' do Post c/ 'id' da url\n//vou importar o useParams, cria lo em cima do useState, no App.jsx colocamos ':id' >> ligacao da busca, renderiza o id do post\n//4.2 se a promise devolver a resp, se a resp é ok, ele mostra o body, mas aqui ñ trata o erro!\n//podemos pegar a devolutiva com o CATCH, dentro dele passamos uma arrow func q exec algo se o id eh invalido!\n//Para fazer isso usaremos outro hook do react-router-dom>> **USEHISTORY(dá acesso ao historico de naveg)\n//vou criar um LET pro history e vou chama lo  dentro do CATCH, usarei o metodo push com o history\n//OU SEJA, CASO ELE BATE EM UM ID Q NAO CONHEÇA, ELE VAI PRA ROTA 404(PAG Ñ EXISTE)\n\nconst Post = () => {\n  _s();\n\n  let history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState({});\n  useEffect(() => {\n    busca(`/posts/${id}`, setPost).catch(() => {\n      history.push('/404');\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container flex flex--centro\",\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"cartao post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"cartao__titulo\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"carta__texto\",\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"+UZe5XmiMcuV7vkfA3WzIBz4XAc=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/react_projs/reactrouter/petshop/src/paginas/Post.jsx"],"names":["React","useEffect","useState","busca","useParams","useHistory","Post","history","id","post","setPost","catch","push","title","body"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,KAAR,QAAoB,YAApB;AACA,OAAO,wBAAP;AACA,SAAQC,SAAR,EAAmBC,UAAnB,QAAoC,kBAApC,C,CAEA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AACF;AACA;AACA;AACA;AACA;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEnB,MAAIC,OAAO,GAAGF,UAAU,EAAxB;AAEA,QAAM;AAACG,IAAAA;AAAD,MAAOJ,SAAS,EAAtB;AAEA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAAE,UAASK,EAAG,EAAd,EAAiBE,OAAjB,CAAL,CACCC,KADD,CACO,MAAI;AACPJ,MAAAA,OAAO,CAACK,IAAR,CAAa,MAAb;AAEH,KAJD;AAMH,GAPQ,EAON,CAACJ,EAAD,CAPM,CAAT;AASI,sBACI;AAAM,IAAA,SAAS,EAAC,6BAAhB;AAAA,2BACI;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA,kBAAgCC,IAAI,CAACI;AAArC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA,kBAA6BJ,IAAI,CAACK;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA3BD;;GAAMR,I;UAEQD,U,EAEDD,S;;;KAJPE,I;AA6BN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {busca} from '../api/api'\r\nimport '../assets/css/post.css'\r\nimport {useParams, useHistory} from 'react-router-dom'\r\n\r\n//4.1 vamos criar o componente Post, c/ arrow function e return para renderizar na tela \r\n//colocaremos o export default pq vamos usar esse compon em outros lugares\r\n//o estado inicial(qd clica) eh vazio, vamos usar useState,que na igualdade é um obj vazio \r\n//vamos usar tb o useEffect pq vamos usar a req da API novamente, faremos um get na API e pegar o id do post especif\r\n//dentro do busca vai mandar ele pro /post/id e o setPost atualiza o estado, '[id]'eh p/ atualizar o componente toda vez que alterar o id\r\n  //**VOU USAR UM HOOK do react-router-dom, chamado USEPARAMS\r\n  //**ele vai fazer ligacao entre o parametro 'id' do Post c/ 'id' da url\r\n  //vou importar o useParams, cria lo em cima do useState, no App.jsx colocamos ':id' >> ligacao da busca, renderiza o id do post\r\n//4.2 se a promise devolver a resp, se a resp é ok, ele mostra o body, mas aqui ñ trata o erro!\r\n//podemos pegar a devolutiva com o CATCH, dentro dele passamos uma arrow func q exec algo se o id eh invalido!\r\n//Para fazer isso usaremos outro hook do react-router-dom>> **USEHISTORY(dá acesso ao historico de naveg)\r\n//vou criar um LET pro history e vou chama lo  dentro do CATCH, usarei o metodo push com o history\r\n//OU SEJA, CASO ELE BATE EM UM ID Q NAO CONHEÇA, ELE VAI PRA ROTA 404(PAG Ñ EXISTE)\r\nconst Post = () => {\r\n\r\nlet history = useHistory()    \r\n\r\nconst {id} = useParams()\r\n\r\nconst [post, setPost] = useState({})\r\n\r\nuseEffect(() => {\r\n    busca(`/posts/${id}`, setPost)\r\n    .catch(()=>{\r\n        history.push('/404')\r\n\r\n    })\r\n\r\n}, [id])\r\n\r\n    return (\r\n        <main className='container flex flex--centro'>\r\n            <article className='cartao post'>\r\n                <h2 className='cartao__titulo'>{post.title}</h2>\r\n                <p className='carta__texto'>{post.body}</p>\r\n\r\n            </article>\r\n        </main>\r\n\r\n    )\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}