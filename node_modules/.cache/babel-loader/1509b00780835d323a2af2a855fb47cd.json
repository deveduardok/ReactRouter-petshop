{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\react_projs\\\\reactrouter\\\\petshop\\\\src\\\\components\\\\ListaPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { busca } from \"../api/api\"; //3.2 componente react sempre tem que importar react\n//Já criamos conexao com api e agr estamos criando o compon que vai listar os posts da api\n//cria o componente, arrow function,\n//vou fazer uma section e uma class(estilo), Aq vou criar como os posts serao exibidos\n//Já sabemos que vamos usar a API aqui para fazer as chamadas\n//3.3 vamos indicar para o REACT qual o estado inicial da nossa aplicação,\n//PARA ISSO VAMOS USAR UM HOOK CHAMADO >> USE STATE, posts(estado inicial) e setPosts(fcao q altera o estado inicial)\n//dentro do usestate passamos um array vazio, que é o estado inicial.\n//**Preciso importar o usestate.\n//Vamos pegar os posts e iterar sobre eles, para pegar cada uma das infos(titulo, categoria, descr,..) p/ montar um card\n//coloco {chaves} pra entrar no JS, usando map, para cada post vou criar um card, vou usar o LInk do router dom\n//embaixo do link será um article, uma chave para identif cada post como unico,... montamos o card para exibir os dados\n//***faremos a chamada da api por meio da 'BUSCA', vou usar ele com useEffect(hook)\n//USEEFFECT serve p/ ñ ficar atualizando toda hora o estado da aplicac, ñ esquecer do fim [] array de dependencia\n//toda vez q alterarmos o estado da aplic chamamos o busca! vai na url e altera o estado.\n//OBSERVANDO, VEMOS QUE SETDADO DA API É O SETPOSTS AQUI\n//Colocaremos o ListaPost na home para aparecer na tela!\n//4.1 vou colocar o 'to' no LINK>> envia para um id especif dos posts, \n//redirecionamos a rota para esse endereço(../posts/x) apos o clique no cartao x\n\nconst ListaPost = ({\n  url\n}) => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    busca(url, setPosts);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"posts container\",\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(Link, {\n      className: \"cartao-post cartao-post--${post.categoria}\",\n      to: '/posts/${post.id}',\n      children: /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"cartao-post__titulo\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"cartao-post__meta\",\n          children: post.metadescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListaPost, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = ListaPost;\nexport default ListaPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListaPost\");","map":{"version":3,"sources":["C:/react_projs/reactrouter/petshop/src/components/ListaPost.jsx"],"names":["React","useEffect","useState","Link","busca","ListaPost","url","posts","setPosts","map","post","title","metadescription","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,KAAT,QAAsB,YAAtB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGA,MAAMC,SAAS,GAAG,CAAE;AAAEC,EAAAA;AAAF,CAAF,KAAe;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,KAAK,CAACE,GAAD,EAAME,QAAN,CAAL;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAA,cACGD,KAAK,CAACE,GAAN,CAAWC,IAAD,iBACT,QAAC,IAAD;AAAM,MAAA,SAAS,EAAE,4CAAjB;AAA+D,MAAA,EAAE,EAAE,mBAAnE;AAAA,6BACE;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,qBAAd;AAAA,oBAAqCA,IAAI,CAACC;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,mBAAb;AAAA,oBAAkCD,IAAI,CAACE;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAcF,IAAI,CAACG,EAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnBD;;GAAMR,S;;KAAAA,S;AAoBN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { busca } from \"../api/api\";\r\n\r\n//3.2 componente react sempre tem que importar react\r\n//Já criamos conexao com api e agr estamos criando o compon que vai listar os posts da api\r\n//cria o componente, arrow function,\r\n//vou fazer uma section e uma class(estilo), Aq vou criar como os posts serao exibidos\r\n//Já sabemos que vamos usar a API aqui para fazer as chamadas\r\n\r\n//3.3 vamos indicar para o REACT qual o estado inicial da nossa aplicação,\r\n//PARA ISSO VAMOS USAR UM HOOK CHAMADO >> USE STATE, posts(estado inicial) e setPosts(fcao q altera o estado inicial)\r\n//dentro do usestate passamos um array vazio, que é o estado inicial.\r\n//**Preciso importar o usestate.\r\n//Vamos pegar os posts e iterar sobre eles, para pegar cada uma das infos(titulo, categoria, descr,..) p/ montar um card\r\n//coloco {chaves} pra entrar no JS, usando map, para cada post vou criar um card, vou usar o LInk do router dom\r\n//embaixo do link será um article, uma chave para identif cada post como unico,... montamos o card para exibir os dados\r\n//***faremos a chamada da api por meio da 'BUSCA', vou usar ele com useEffect(hook)\r\n//USEEFFECT serve p/ ñ ficar atualizando toda hora o estado da aplicac, ñ esquecer do fim [] array de dependencia\r\n//toda vez q alterarmos o estado da aplic chamamos o busca! vai na url e altera o estado.\r\n//OBSERVANDO, VEMOS QUE SETDADO DA API É O SETPOSTS AQUI\r\n//Colocaremos o ListaPost na home para aparecer na tela!\r\n\r\n//4.1 vou colocar o 'to' no LINK>> envia para um id especif dos posts, \r\n//redirecionamos a rota para esse endereço(../posts/x) apos o clique no cartao x\r\n\r\n\r\nconst ListaPost = ( { url } ) => {\r\n  const [posts, setPosts] = useState([])\r\n\r\n  useEffect(() => {\r\n      busca(url, setPosts)\r\n  }, [])\r\n \r\n  return (\r\n    <section className=\"posts container\">\r\n      {posts.map((post) => (\r\n        <Link className={\"cartao-post cartao-post--${post.categoria}\"} to={'/posts/${post.id}'}>\r\n          <article key={post.id}>\r\n            <h3 className=\"cartao-post__titulo\">{post.title}</h3>\r\n            <p className=\"cartao-post__meta\">{post.metadescription}</p>\r\n          </article>\r\n        </Link>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\nexport default ListaPost;\r\n"]},"metadata":{},"sourceType":"module"}