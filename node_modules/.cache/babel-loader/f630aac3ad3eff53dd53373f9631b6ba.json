{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\react_projs\\\\reactrouter\\\\petshop\\\\src\\\\paginas\\\\Categoria.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../assets/css/blog.css\";\nimport ListaCategorias from \"../components/ListaCategorias\";\nimport ListaPost from \"../components/ListaPost\";\nimport SubCategoria from \"../paginas/SubCategoria\";\nimport { Route, useParams, useRouteMatch, Link, Switch } from \"react-router-dom\";\nimport { busca } from \"../api/api\";\n\nconst Categoria = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    path,\n    url\n  } = useRouteMatch();\n  const [subcategorias, setSubCategorias] = useState([]);\n  useEffect(() => {\n    busca(`/categorias/${id}`, categoria => {\n      setSubCategorias(categoria.subcategorias);\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"titulo-pagina\",\n        children: \"Pet Not\\xEDcias\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListaCategorias, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"lista-categorias container flex\",\n      children: subcategorias.map(subcategoria => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `lista-categorias__categoria lista-categorias__categoria--${id}`,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `${url}/${subcategoria}`,\n          children: subcategoria\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, subcategoria, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${path}/`,\n        children: /*#__PURE__*/_jsxDEV(ListaPost, {\n          url: `/posts?categoria=${id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${path}/:subcategoria`,\n        children: /*#__PURE__*/_jsxDEV(SubCategoria, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Categoria, \"q+hhpxL0wZe/QN60nIHtOQOhpLQ=\", false, function () {\n  return [useParams, useRouteMatch];\n});\n\n_c = Categoria;\nexport default Categoria; //1º quero exibir a listagem dos posts, independ se cliquei no botao verm ou azul,\n//quero que os dois continuem ali renderizados. Entao vou importar o compon LIstaCategorias (compon a gnt abre e fecha tag)\n//faço import do compon tb, assim com esse compon, os dois botoes estarão lá. Vou no App.jsx e coloca a rota Categoria lá\n//Agora vou ter que exibir os posts relacionado a categoria(botao) escolhido, seria um IF, mas o ROUTE já faz isso p/ nós\n//Usarei o LIstaPost com uma query, para selecionar os posts que quero ( da categoria certa)\n//Na url>> falo p/ ele ir em post, categoria, mostrar os posts especif daquela categoria\n//Como saber qual eh a categ? Vamos usar o HOOK, **useParams!! Ele pega o id e fala qual rota estou. Se estou falando de Rota, coloco a tag Route\n// 'exact' pra evitar o comport padrao e o path\n//Outro HOOK q iremos usar: 'useRouteMatch', será responsavel por mostrar se estou em 'bem-estar' ou 'comport..'\n//5.2 o estado inicial de qd clicamos no botao da subcat, por eqt eh vazio>> crio **useState..subcat.. array vazio\n//teremos tb que pegar na API p/ pegar os posts da subcateg,\n//COMO usaremos CHAMADA DE API, C/ ATUALIZACAO DE COMPON, chamaremos dentro do **useEffect!!\n//faremos a busca pela rota da categoria especifica!! Vou passar uma fcao anonima q vai exec o setSubCategorias pq\n//precisamos passar como parametro 'categoria' dentro da fcao anonima, e setSUbCat p/ poder atualizar as subcateg, acessando as categorias\n//5.3 tudo q esta dentro da tag ul colocarei {} pq será JS, faremos um mapa das subcat.\n//Usaremos um MAP, pra cada subcateg uma arrow funct e colocaremos toda li lá dentro\n//Abaixo da li, faremos um Link, que me enviara p/ alguma rota, vai me mandar p/ categ e depois p/ subcategoria,\n//url = é o caminho ate a categ, entre os links pegara o nome da subcateg. Vou colocar a 'url' no useRouteMatch, junto com o path.\n//VAMOS CRIAR MAIS UMA ROTA, PARA RENDERIZAR O COMPON DA SUBCATEG, passarei o path\n//':subcat' deixaremos a subcat dinamica, o useParams que vai falar se estou em higiene ou saude\n//VOU colocar um SWITCH para qd achar a rota, parar e ñ ficar procurando\n\nvar _c;\n\n$RefreshReg$(_c, \"Categoria\");","map":{"version":3,"sources":["C:/react_projs/reactrouter/petshop/src/paginas/Categoria.jsx"],"names":["React","useEffect","useState","ListaCategorias","ListaPost","SubCategoria","Route","useParams","useRouteMatch","Link","Switch","busca","Categoria","id","path","url","subcategorias","setSubCategorias","categoria","map","subcategoria"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,wBAAP;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,aAA3B,EAA0CC,IAA1C,EAAgDC,MAAhD,QAA8D,kBAA9D;AACA,SAASC,KAAT,QAAsB,YAAtB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAASN,SAAS,EAAxB;AACA,QAAM;AAAEO,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAgBP,aAAa,EAAnC;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,EAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAE,eAAcE,EAAG,EAAnB,EAAuBK,SAAD,IAAe;AACxCD,MAAAA,gBAAgB,CAACC,SAAS,CAACF,aAAX,CAAhB;AACD,KAFI,CAAL;AAGD,GAJQ,EAIN,CAACH,EAAD,CAJM,CAAT;AAMA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAI,MAAA,SAAS,EAAC,iCAAd;AAAA,gBACGG,aAAa,CAACG,GAAd,CAAmBC,YAAD,iBACjB;AACE,QAAA,SAAS,EAAG,4DAA2DP,EAAG,EAD5E;AAAA,+BAIE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,GAAEE,GAAI,IAAGK,YAAa,EAAjC;AAAA,oBAAqCA;AAArC;AAAA;AAAA;AAAA;AAAA;AAJF,SAEOA,YAFP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YANF,eAgBE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEN,IAAK,GAA3B;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,GAAG,EAAG,oBAAmBD,EAAG;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEC,IAAK,gBAArB;AAAA,+BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA,kBADF;AA2BD,CAtCD;;GAAMF,S;UACWL,S,EACOC,a;;;KAFlBI,S;AAwCN,eAAeA,SAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../assets/css/blog.css\";\r\nimport ListaCategorias from \"../components/ListaCategorias\";\r\nimport ListaPost from \"../components/ListaPost\";\r\nimport SubCategoria from \"../paginas/SubCategoria\";\r\nimport { Route, useParams, useRouteMatch, Link, Switch } from \"react-router-dom\";\r\nimport { busca } from \"../api/api\";\r\n\r\nconst Categoria = () => {\r\n  const { id } = useParams();\r\n  const { path, url } = useRouteMatch();\r\n  const [subcategorias, setSubCategorias] = useState([]);\r\n\r\n  useEffect(() => {\r\n    busca(`/categorias/${id}`, (categoria) => {\r\n      setSubCategorias(categoria.subcategorias);\r\n    });\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h2 className=\"titulo-pagina\">Pet Notícias</h2>\r\n      </div>\r\n\r\n      <ListaCategorias />\r\n      <ul className=\"lista-categorias container flex\">\r\n        {subcategorias.map((subcategoria) => (\r\n          <li\r\n            className={`lista-categorias__categoria lista-categorias__categoria--${id}`}\r\n            key={subcategoria}\r\n          >\r\n            <Link to={`${url}/${subcategoria}`}>{subcategoria}</Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <Switch>\r\n        <Route exact path={`${path}/`}>\r\n          <ListaPost url={`/posts?categoria=${id}`} />\r\n        </Route>\r\n        <Route path={`${path}/:subcategoria`}>\r\n          <SubCategoria />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Categoria;\r\n\r\n//1º quero exibir a listagem dos posts, independ se cliquei no botao verm ou azul,\r\n//quero que os dois continuem ali renderizados. Entao vou importar o compon LIstaCategorias (compon a gnt abre e fecha tag)\r\n//faço import do compon tb, assim com esse compon, os dois botoes estarão lá. Vou no App.jsx e coloca a rota Categoria lá\r\n//Agora vou ter que exibir os posts relacionado a categoria(botao) escolhido, seria um IF, mas o ROUTE já faz isso p/ nós\r\n//Usarei o LIstaPost com uma query, para selecionar os posts que quero ( da categoria certa)\r\n//Na url>> falo p/ ele ir em post, categoria, mostrar os posts especif daquela categoria\r\n//Como saber qual eh a categ? Vamos usar o HOOK, **useParams!! Ele pega o id e fala qual rota estou. Se estou falando de Rota, coloco a tag Route\r\n// 'exact' pra evitar o comport padrao e o path\r\n//Outro HOOK q iremos usar: 'useRouteMatch', será responsavel por mostrar se estou em 'bem-estar' ou 'comport..'\r\n\r\n//5.2 o estado inicial de qd clicamos no botao da subcat, por eqt eh vazio>> crio **useState..subcat.. array vazio\r\n//teremos tb que pegar na API p/ pegar os posts da subcateg,\r\n//COMO usaremos CHAMADA DE API, C/ ATUALIZACAO DE COMPON, chamaremos dentro do **useEffect!!\r\n//faremos a busca pela rota da categoria especifica!! Vou passar uma fcao anonima q vai exec o setSubCategorias pq\r\n//precisamos passar como parametro 'categoria' dentro da fcao anonima, e setSUbCat p/ poder atualizar as subcateg, acessando as categorias\r\n\r\n//5.3 tudo q esta dentro da tag ul colocarei {} pq será JS, faremos um mapa das subcat.\r\n//Usaremos um MAP, pra cada subcateg uma arrow funct e colocaremos toda li lá dentro\r\n//Abaixo da li, faremos um Link, que me enviara p/ alguma rota, vai me mandar p/ categ e depois p/ subcategoria,\r\n//url = é o caminho ate a categ, entre os links pegara o nome da subcateg. Vou colocar a 'url' no useRouteMatch, junto com o path.\r\n//VAMOS CRIAR MAIS UMA ROTA, PARA RENDERIZAR O COMPON DA SUBCATEG, passarei o path\r\n//':subcat' deixaremos a subcat dinamica, o useParams que vai falar se estou em higiene ou saude\r\n//VOU colocar um SWITCH para qd achar a rota, parar e ñ ficar procurando\r\n"]},"metadata":{},"sourceType":"module"}